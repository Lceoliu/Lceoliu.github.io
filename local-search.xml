<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>线性代数笔记</title>
    <link href="/2025/01/14/linear-algebra/linear-algebra/"/>
    <url>/2025/01/14/linear-algebra/linear-algebra/</url>
    
    <content type="html"><![CDATA[<h2 id="preface">Preface</h2><p>The note mainly referenced to <a href="https://ocw.mit.edu/courses/18-06sc-linear-algebra-fall-2011/">MIT18.06 Linear Algebra</a>, <a href="https://space.bilibili.com/88461692/lists/1528927?type=series">3blue1brown'sEssence of Linear Algebra</a>, and of course, <a href="https://www.skodleracks.co.uk/">the course of Linear Algebra I inShanghaiTech University</a>.</p><h2 id="unit-1-vectors-and-matrices">Unit 1: Vectors and Matrices</h2><h3 id="the-geometry-of-linear-equations">1.1 The Geometry of LinearEquations</h3><h4 id="what-is-a-matrix">What is a matrix?</h4><ul><li><ol type="I"><li>a coefficient view(线性方程组的系数):</li></ol><p><span class="math display">\[\begin{cases}2x - y = 0\\-x + 2y = 3\end{cases}\quad\Rightarrow  \quad  \begin{bmatrix}  2 &amp; -1\\  -1 &amp; 2  \end{bmatrix}  \begin{bmatrix}  x\\  y  \end{bmatrix}  =  \begin{bmatrix}  0\\  3  \end{bmatrix}\]</span></p></li><li><ol start="2" type="I"><li>a row view(多条线性方程的函数图像): <span class="math inline">\(\begin{cases}2x - y = 0\\-x + 2y = 3\end{cases}\)</span></li></ol><p><img src="https://raw.githubusercontent.com/Lceoliu/blog-img/main/p1_1_row_view.svg"></p></li><li><ol start="3" type="I"><li>a column view:</li></ol><p>the linear combination of vectors(许多向量的线性组合)</p><p><span class="math display">\[\begin{bmatrix}2\\-1\end{bmatrix}x+\begin{bmatrix}-1\\2\end{bmatrix}y=\begin{bmatrix}0\\3\end{bmatrix}\]</span></p></li><li><ol start="4" type="I"><li><em>the basis transformation of the space</em>(这一部分将在 Unit3中的线性变换中给出更详细的解释，但我们应该在一开始就有这样的 intuition)<p align="center">将基向量变化为给定矩阵的列向量<video src="https://raw.githubusercontent.com/Lceoliu/blog-img/main/BasisTransform.mp4" autoplay="true" controls="controls" width="100%"></video></p></li></ol></li></ul><h3 id="elimination">1.2 Elimination</h3><h4 id="gaussian-jordan-elimination高斯-约旦消元法">Gaussian-JordanElimination(高斯-约旦消元法)</h4><p>所谓消元法，其实可以看作是初中生都会的求解多元一次方程组:</p><p>e.g.</p><p><span class="math display">\[\left\{\begin{array}{rcl}  x &amp;+ ~2y + z &amp;= 2 \\  3x &amp;+ ~8y + z &amp;= 12 \\     &amp; \quad 4y + z &amp;= 2\end{array}\right.\Rightarrow\left[\begin{array}{ccc|c}1 &amp; 2 &amp; 1 &amp; 2 \\3 &amp; 8 &amp; 1 &amp; 12 \\0 &amp; 4 &amp; 1 &amp; 2\end{array}\right]\]</span></p><p>这里，我们把方程组等号左边的系数和右边的常数写在一个矩阵中，这个矩阵称为增广矩阵(AugmentedMatrix)。</p><p>我们应该如何求解这个方程组呢？只看左边的方程组，最直接的思路就是消元法，用第二个方程减去第一个方程，这样就消去了<span class="math inline">\(z\)</span>，再通过第三个方程得到<span class="math inline">\(y\)</span>和<span class="math inline">\(z\)</span>的关系式，最后解出所有的未知数。</p><p>高斯消元法的本质就是这样，只不过我们最好按照更加固定的步骤来进行，保证对一切方程组都能按部就班地求解(有了按部就班的方法，剩下的计算就是计算机的活了)。</p><p>具体的步骤如下:</p><ul><li><p>Step 1:从当前行(第一行)开始，找到第一个非零元素，称为主元素(Pivot)，如果主元素为0，则交换行，使得主元素不为 0。</p><p><span class="math display">\[\left[\begin{array}{ccc|c}\overset{\text{Pivot}}{\fcolorbox{red}{white}{1}} &amp; 2 &amp; 1 &amp;2 \\3 &amp; 8 &amp; 1 &amp; 12 \\0 &amp; 4 &amp; 1 &amp; 2\end{array}\right]\]</span></p></li><li><p>Step 2: 用主元素消去下面的元素，使得下面每一行、同一列(Pivotcolumn)的元素为 0，其他列的元素则加上/减去相应倍数的第一行元素。</p><p><span class="math display">\[\underset{r_3&#39;=r_3}{\overset{r_2&#39;=r_2-3r_1}{\longrightarrow}}\left[\begin{array}{ccc|c}1 &amp; 2 &amp; 1 &amp; 2 \\0 &amp; 2 &amp; -2 &amp; 6 \\0 &amp; 4 &amp; 1 &amp; 2\end{array}\right]\]</span></p></li><li><p>Step 3: 换下一行，重复 Step 1 和 Step 2，直到所有的主元素都为1，且主元素下面的元素都为 0。</p><p><span class="math display">\[\overset{r_3&#39;=r_3-2r_2}{\longrightarrow}\left[\begin{array}{ccc|c}{1} &amp; 2 &amp; 1 &amp; 2 \\0 &amp; \overset{\text{new Pivot}}{\fcolorbox{red}{white}{2}} &amp; -2&amp; 6 \\0 &amp; 0 &amp; 5 &amp; -10\end{array}\right]\]</span></p><p>此时，我们就得到了一个<strong>上三角矩阵</strong>(Upper TriangularMatrix)，这个矩阵的特点是主对角线以下的元素都为 0 :</p><p><span class="math display">\[\begin{bmatrix}1 &amp; 2 &amp; 1\\\color{red}{0} &amp; 2 &amp; -2\\\color{red}{0} &amp; \color{red}{0} &amp; 5\end{bmatrix}\]</span></p><p>如果我们把这个矩阵的右边的常数项也写在矩阵中，那么这个矩阵就是一个<strong>行阶梯形矩阵</strong>(RowEchelon Form)：</p><!-- $$\left[\begin{array}{ccc|c}1 & 2 & 1 & 2 \\0 & 2 & -2 & 6 \\0 & 0 & 5 & -10\end{array}\right]$$ --><p align="center"></p><p><img src="https://raw.githubusercontent.com/Lceoliu/blog-img/main/20250116023025111.png"></p><p></p><p>实际上，到这一步时，我们算是完成了 Gauss-Jordan消元法的第一部分，也就是"GaussionElimination"，即将矩阵变换为上三角矩阵。接下来，我们需要将这个矩阵变换为<strong>行最简形矩阵</strong>(RowReduced Echelon Form)。</p></li><li><p>Step 4: 回忆最基本的方程组求解办法，现在我们相当于有方程组：</p><p><span class="math display">\[\begin{cases}x + 2y + z = 2\\2y - 2z = 6\\5z = -10\end{cases}\]</span></p><p>我们应该从最后一行开始，逐步解出所有的未知数，这个过程称为<strong>回代(Substitution)</strong>。为了方便回代过程，我们可以先把每行归一化：</p><p><span class="math display">\[\left[\begin{array}{ccc|c}1 &amp; 2 &amp; 1 &amp; 2 \\0 &amp; 1 &amp; -1 &amp; 3 \\0 &amp; 0 &amp; 1 &amp; -2\end{array}\right]\]</span></p><p>然后，我们可以模仿一开始的消元过程，从最后一行开始，逐步回代：</p><p><span class="math display">\[\underset{r_1&#39;=r1-r3}{\overset{r_2&#39; = r_2+r_3}{\longrightarrow}}\left[\begin{array}{ccc|c}1 &amp; 2 &amp; 0 &amp; 4 \\0 &amp; 1 &amp; 0 &amp; 1 \\0 &amp; 0 &amp; 1 &amp; -2\end{array}\right]\overset{r_1&#39;=r_1-2r_2}{\longrightarrow}\left[\begin{array}{ccc|c}1 &amp; 0 &amp; 0 &amp; 2 \\0 &amp; 1 &amp; 0 &amp; 1 \\0 &amp; 0 &amp; 1 &amp; -2\end{array}\right]\]</span></p><p>把这个矩阵变换为<strong>行最简形矩阵</strong>(Row Reduced EchelonForm)：</p><p><span class="math display">\[\left[\begin{array}{ccc|c}\overset{\text{leading} ~1}{\fcolorbox{red}{white}{1}} &amp; 0 &amp; 0&amp; 2 \\0 &amp; \overset{\text{leading} ~1}{\fcolorbox{red}{white}{1}} &amp; 0&amp; 1 \\0 &amp; 0 &amp; \overset{\text{leading} ~1}{\fcolorbox{red}{white}{1}}&amp; -2\end{array}\right]:\begin{cases}  \text{The leading entry in each nonzero row is 1 (called a leadingone).} \\  \quad \text{每个非零行的前导元素为 1。} \\  \text{Each leading 1 is the only nonzero entry in its column.} \\  \quad \text{每个前导 1 是其列中唯一的非零元素。}\end{cases}\]</span></p><p>注意，这个 reduce echelon form 是唯一的，就是我们的方程组的解： $</p><span class="math display">\[\begin{cases}x = 2\\y = 1\\z = -2\end{cases}\]</span><p>$</p></li></ul><h4 id="more-about-row-ehcelon-form-reduced-row-echelon-form">More aboutRow Ehcelon Form &amp; Reduced Row Echelon Form</h4><ul><li>row echelon form 并不一定是 triangular的，其可以被视为一种弱化或者是推广的 triangular matrix，例如：</li></ul><p align="center"><img src="https://raw.githubusercontent.com/Lceoliu/blog-img/main/posts/linear_algebra20250116033035751.png"><br> 不是 triangular 的 row echelon form</p><ul><li><p>一个矩阵消元得到的 row echelon form 并不一定是唯一的，但是reduced row echelon form 是唯一的。</p></li><li><p>根据 reduced row echelon form 的性质，我们可以把任意的 reducedrow echelon form 矩阵写成如下形式：</p><p><span class="math display">\[\begin{bmatrix}I &amp; X\\0 &amp; 0\end{bmatrix}\]</span></p><p>其中，<span class="math inline">\(I\)</span>是<strong>单位矩阵</strong>（有且只有主对角线上元素为 1，其余元素为0），<span class="math inline">\(X\)</span>是自由变量的系数矩阵。</p></li></ul><h3 id="matrix-multiplication-and-inverse">1.3 Matrix Multiplication andInverse</h3><h4 id="matrix-multiplication">Matrix Multiplication</h4><ul><li><ol type="I"><li>为什么我们需要矩阵乘法？</li></ol><p>在 1.1 中，我们就提到了 coefficient view 和 column view，例如<span class="math inline">\(\begin{bmatrix}2 &amp; -1\\-1 &amp;2\end{bmatrix}\begin{bmatrix}x\\y\end{bmatrix}=\begin{bmatrix}0\\3\end{bmatrix}\)</span>，这个式子就是一个矩阵乘法；而我们在column view 中，也把它理解为两个向量的线性组合，即<span class="math inline">\(\begin{bmatrix}2\\-1\end{bmatrix}x+\begin{bmatrix}-1\\2\end{bmatrix}y=\begin{bmatrix}0\\3\end{bmatrix}\)</span>，实际上，这两个视角是等价的：矩阵的乘法，都可以视为不同向量的不同线性组合。</p></li><li><ol start="2" type="I"><li>矩阵乘法的定义：</li></ol><p>对于矩阵<span class="math inline">\(A\in\mathbb{R}^{m\times\boxed{n}}\)</span>和<span class="math inline">\(B\in\mathbb{R}^{\boxed{n} \timesp}\)</span>，其乘积<span class="math inline">\(C=AB\in\mathbb{R}^{m\timesp}\)</span>的定义为：</p><p><span class="math display">\[C_{ij}=\sum_{k=1}^nA_{ik}B_{kj}\quad \text{或者说} \quadC_{ij}=\overrightarrow{\text{row}_i(A)}\cdot\overrightarrow{\text{col}_j(B)}\]</span></p><p>（注：所谓<span class="math inline">\(A\in\mathbb{R}^{m\timesn}\)</span>，表示矩阵<span class="math inline">\(A\)</span>的行数为<span class="math inline">\(m\)</span>，列数为<span class="math inline">\(n\)</span>，所有元素都属于实数域<span class="math inline">\(\mathbb{R}\)</span>；<span class="math inline">\(\overrightarrow{\text{row}_i(A)}\)</span>代表将矩阵<span class="math inline">\(A\)</span>的第<span class="math inline">\(i\)</span>行视为一个向量）</p><p>很显然，我们发现，<strong>矩阵乘法是不满足交换律的</strong>，即<span class="math inline">\(AB\neq BA\)</span>。</p></li><li><ol start="3" type="I"><li>列视角理解：</li></ol><p>对于矩阵乘法<span class="math inline">\(AB\)</span>，我们可以把<span class="math inline">\(A\)</span>视为一组列向量的集合，那么<span class="math inline">\(AB\)</span>中的每一列都是<span class="math inline">\(A\)</span>中所有列向量的线性组合，且系数由<span class="math inline">\(B\)</span>中的对应列决定。</p><p>例如，对于矩阵<span class="math inline">\(A=\begin{bmatrix}1 &amp;2\\3 &amp; 4\end{bmatrix}\)</span>和<span class="math inline">\(B=\begin{bmatrix}5 &amp; 6\\7 &amp;8\end{bmatrix}\)</span>，我们可以把<span class="math inline">\(A\)</span>视为两个列向量<span class="math inline">\(\begin{bmatrix}1\\3\end{bmatrix}\)</span>和<span class="math inline">\(\begin{bmatrix}2\\4\end{bmatrix}\)</span>，那么<span class="math inline">\(AB\)</span>中的第一列就是<span class="math inline">\(A\)</span>中两个列向量的线性组合，而系数则来自<span class="math inline">\(B\)</span>中对应的第一列元素<span class="math inline">\(5\)</span>和<span class="math inline">\(7\)</span>，即<span class="math inline">\(5\begin{bmatrix}1\\3\end{bmatrix}+7\begin{bmatrix}2\\4\end{bmatrix}=\begin{bmatrix}19\\43\end{bmatrix}\)</span>。同理，<span class="math inline">\(AB\)</span>中的第二列就是两个列向量以<span class="math inline">\(B\)</span>中对应的<span class="math inline">\(6\)</span>和<span class="math inline">\(8\)</span>为系数的线性组合，即<span class="math inline">\(6\begin{bmatrix}1\\3\end{bmatrix}+8\begin{bmatrix}2\\4\end{bmatrix}=\begin{bmatrix}22\\50\end{bmatrix}\)</span>。即：</p><p><span class="math display">\[AB=\begin{bmatrix}1 &amp; 2\\3 &amp; 4\end{bmatrix}\begin{bmatrix}5&amp; 6\\7 &amp; 8\end{bmatrix}=\begin{bmatrix}19 &amp; 22\\43 &amp;50\end{bmatrix}\]</span></p></li><li><ol start="4" type="I"><li>行视角理解：</li></ol><p>对于矩阵乘法<span class="math inline">\(AB\)</span>，我们可以把<span class="math inline">\(B\)</span>视为一组行向量的集合，那么<span class="math inline">\(AB\)</span>中的每一行都是<span class="math inline">\(B\)</span>中所有行向量的线性组合，且系数由<span class="math inline">\(A\)</span>中的对应行决定。</p><p>例如，对于矩阵<span class="math inline">\(A=\begin{bmatrix}1 &amp;2\\3 &amp; 4\end{bmatrix}\)</span>和<span class="math inline">\(B=\begin{bmatrix}5 &amp; 6\\7 &amp;8\end{bmatrix}\)</span>，我们可以把<span class="math inline">\(B\)</span>视为两个行向量<span class="math inline">\(\begin{bmatrix}5 &amp;6\end{bmatrix}\)</span>和<span class="math inline">\(\begin{bmatrix}7&amp; 8\end{bmatrix}\)</span>，那么<span class="math inline">\(AB\)</span>中的第一行就是<span class="math inline">\(B\)</span>中两个行向量的线性组合，而系数则来自<span class="math inline">\(A\)</span>中对应的第一行元素<span class="math inline">\(1\)</span>和<span class="math inline">\(2\)</span>，即<span class="math inline">\(1\begin{bmatrix}5 &amp;6\end{bmatrix}+2\begin{bmatrix}7 &amp; 8\end{bmatrix}=\begin{bmatrix}19&amp; 22\end{bmatrix}\)</span>。同理，<span class="math inline">\(AB\)</span>中的第二行就是两个行向量以<span class="math inline">\(A\)</span>中对应的<span class="math inline">\(3\)</span>和<span class="math inline">\(4\)</span>为系数的线性组合，即<span class="math inline">\(3\begin{bmatrix}5 &amp;6\end{bmatrix}+4\begin{bmatrix}7 &amp; 8\end{bmatrix}=\begin{bmatrix}43&amp; 50\end{bmatrix}\)</span>。即：</p><p><span class="math display">\[AB=\begin{bmatrix}1 &amp; 2\\3 &amp; 4\end{bmatrix}\begin{bmatrix}5&amp; 6\\7 &amp; 8\end{bmatrix}=\begin{bmatrix}19 &amp; 22\\43 &amp;50\end{bmatrix}\]</span></p></li><li><ol start="22" type="A"><li>高斯消元中的矩阵乘法</li></ol><p>在(III)和(IV)中，我们提到了矩阵乘法的列视角和行视角，为什么我们要这样理解矩阵乘法呢？这是因为在高斯消元法中，我们用一行加上或减去另一行的倍数，实际上就是在做矩阵乘法的行视角理解：</p><p><span class="math display">\[\left[\begin{array}{ccc|c}1 &amp; 2 &amp; 1 &amp; 2 \\3 &amp; 8 &amp; 1 &amp; 12 \\0 &amp; 4 &amp; 1 &amp; 2\end{array}\right]\overset{r_2&#39;=r_2-3r_1}{\longrightarrow}\left[\begin{array}{ccc|c}1 &amp; 2 &amp; 1 &amp; 2 \\0 &amp; 2 &amp; -2 &amp; 6 \\0 &amp; 4 &amp; 1 &amp; 2\end{array}\right]\]</span></p><p>等价于：</p><p><span class="math display">\[\underset{E_1}{\begin{bmatrix}1 &amp; 0 &amp; 0\\-3 &amp; 1 &amp; 0\\0 &amp; 0 &amp; 1\end{bmatrix}}\underset{A}{\begin{bmatrix}1 &amp; 2 &amp; 1 &amp; 2 \\3 &amp; 8 &amp; 1 &amp; 12 \\0 &amp; 4 &amp; 1 &amp; 2\end{bmatrix}}=\underset{B}{\begin{bmatrix}1 &amp; 2 &amp; 1 &amp; 2 \\0 &amp; 2 &amp; -2 &amp; 6 \\0 &amp; 4 &amp; 1 &amp; 2\end{bmatrix}}\]</span></p><p>自然地，既然我们可以把“第二行减去三倍的第一行”理解为一个矩阵乘法，那么我们也可以把<a href="#gaussian-jordan-elimination高斯-约旦消元法">高斯消元法的所有步骤</a>理解为许多矩阵乘法的组合：</p><p><span class="math display">\[\underset{\underset{第二步}{E_2}}{\begin{bmatrix}1 &amp; 0 &amp; 0\\0 &amp; 1 &amp; 0\\0 &amp; -2 &amp; 1\end{bmatrix}}\underset{\underset{第一步}{E_1}}{\begin{bmatrix}1 &amp; 0 &amp; 0\\-3 &amp; 1 &amp; 0\\0 &amp; 0 &amp; 1\end{bmatrix}}\underset{A}{\begin{bmatrix}1 &amp; 2 &amp; 1 &amp; 2 \\3 &amp; 8 &amp; 1 &amp; 12 \\0 &amp; 4 &amp; 1 &amp; 2\end{bmatrix}}=\underset{U}{\begin{bmatrix}1 &amp; 2 &amp; 1 &amp; 2 \\0 &amp; 2 &amp; -2 &amp; 6 \\0 &amp; 0 &amp; 5 &amp; -10\end{bmatrix}}\]</span></p><p>这里，<span class="math inline">\(E_1\)</span>和<span class="math inline">\(E_2\)</span>分别是高斯消元法的第一步和第二步的矩阵，<span class="math inline">\(A\)</span>是原始的增广矩阵，<span class="math inline">\(U\)</span>是上三角矩阵。当然，我们也可以把<span class="math inline">\(E_1\)</span>和<span class="math inline">\(E_2\)</span>合并为一个矩阵<span class="math inline">\(E=E_2E_1\)</span>，那么<span class="math inline">\(U=EA\)</span>。</p><p>另外，我们很容易能注意到，所有的<span class="math inline">\(E_i\)</span>都是<strong>下三角矩阵(LowerTriangularMatrix)</strong>，这很直观，因为我们在消元的过程中，只是用下面的行减去上面的行的倍数，而不会用上面的行减去下面的行的倍数，自然地，<span class="math inline">\(E\)</span>也是下三角矩阵。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>notes</tag>
      
      <tag>math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>独立游戏品鉴与分析</title>
    <link href="/2024/09/30/page-1/page-1/"/>
    <url>/2024/09/30/page-1/page-1/</url>
    
    <content type="html"><![CDATA[<h2 id="写在最前面">写在最前面：</h2><p>记录一下玩过的许多优秀独立游戏，并分析一下有趣的点，希望自己能长期更新。</p><p>每个游戏都会给出一个我自创的打分规则，规则如下：</p><ol type="1"><li>玩法<ul><li>创新性</li><li>重玩性</li><li>自由度</li><li>操作感</li><li>沉浸感</li><li>细节设计</li></ul></li><li>画面<ul><li>风格化</li><li>统一程度</li><li>画面质量</li></ul></li><li>音乐<ul><li>适配度</li><li>全局影响</li><li>情绪影响</li></ul></li><li>剧情<ul><li>创新度</li><li>人物刻画</li><li>背景完善程度</li><li>情绪影响</li><li></li></ul></li></ol><p>P.S.以下所有品鉴纯属个人口味，也许某天再回来看这时候写的分析也会觉得很愚蠢</p><h3 id="luck-be-a-landlord-幸运房东">Luck be a Landlord (幸运房东)</h3><h3 id="shapez.io">Shapez.io</h3><h3 id="vampire-survivors">Vampire Survivors</h3><h3 id="section"></h3>]]></content>
    
    
    
    <tags>
      
      <tag>GameDev</tag>
      
      <tag>随笔</tag>
      
      <tag>独立游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games101自学笔记</title>
    <link href="/2024/09/14/page/page/"/>
    <url>/2024/09/14/page/page/</url>
    
    <content type="html"><![CDATA[<h2 id="games101-自学笔记">Games101 自学笔记</h2><h3 id="l12">L1,2</h3><p>略</p><hr><h3 id="l34-transformation">L3,4 Transformation</h3><h4 id="基础变换的矩阵形式">基础变换的矩阵形式</h4><p>为了使平移变换可以写成线性变换，所以我们要使用 4 维矩阵表示 3维空间的向量、点和变换；</p><p>我们把向量记为<span class="math display">\[\begin{bmatrix}x\\  y\\  z\\  0\end{bmatrix}\]</span>，把点记为<span class="math display">\[\begin{bmatrix}x\\  y\\  z\\  1\end{bmatrix}\]</span>，是因为：</p><ul><li>向量平移后应与原向量无区别</li><li>方便点的坐标统一（认为<span class="math display">\[\begin{bmatrix}x\\  y\\  z\\  1\end{bmatrix}\]</span>与<span class="math display">\[\begin{bmatrix}2x\\  2y\\  2z\\  2\end{bmatrix}\]</span>无区别）</li></ul><p>所以，我们可以得出所有基础变换的变换矩阵：</p><ol type="1"><li><p>平移矩阵</p><p><span class="math display">\[\left[\begin{array}{c}1 &amp; 0 &amp; 0 &amp; dx\\0 &amp; 1 &amp; 0 &amp; dy\\0 &amp; 0 &amp; 1 &amp; dz\\0 &amp; 0 &amp; 0 &amp; 1\end{array}\right]\]</span></p></li><li><p>缩放矩阵</p></li></ol><p>​</p><p><span class="math display">\[\left[\begin{array}{c}tx &amp; 0 &amp; 0 &amp; 0\\0 &amp; ty &amp; 0 &amp; 0\\0 &amp; 0 &amp; tz &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{array}\right]\]</span></p><ol start="3" type="1"><li><p>旋转矩阵（右手坐标系）</p><ul><li>绕 x 轴</li></ul><p><span class="math display">\[\left[\begin{array}{c}1 &amp; 0 &amp; 0 &amp; 0\\0 &amp; \cos\theta &amp; -\sin\theta &amp; 0\\0 &amp; \sin\theta &amp; \cos\theta &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{array}\right]\]</span></p><ul><li><p>绕 y 轴</p><p><span class="math display">\[\left[\begin{array}{c}\cos\theta &amp; 0 &amp; \sin\theta &amp; 0\\0 &amp; 1 &amp; 0 &amp; 0\\-\sin\theta &amp; 0 &amp; \cos\theta &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{array}\right]\]</span></p></li><li><p>绕 z 轴 <span class="math display">\[\left[\begin{array}{c}\cos\theta &amp; -\sin\theta &amp; 0 &amp; 0\\\sin\theta &amp; \cos\theta &amp; 0 &amp; 0\\0 &amp; 0 &amp; 1 &amp; 0\\0 &amp; 0 &amp; 0 &amp; 1\end{array}\right]\]</span></p></li></ul></li></ol><hr><h4 id="d-变换之-mvp-矩阵">3D 变换之 MVP 矩阵</h4><p>MVP 矩阵，即Model(模型),View(视图),Projection(投影)三大变换矩阵，是将 3D模型转换为屏幕上的 2D 坐标的变换。</p>]]></content>
    
    
    
    <tags>
      
      <tag>notes</tag>
      
      <tag>CG</tag>
      
      <tag>Games101</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>first-blog</title>
    <link href="/2024/09/10/first-blog/first-blog/"/>
    <url>/2024/09/10/first-blog/first-blog/</url>
    
    <content type="html"><![CDATA[<h1 id="my-first-blog-using-hexo">My First Blog Using Hexo!</h1>]]></content>
    
    
    
    <tags>
      
      <tag>test-blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
